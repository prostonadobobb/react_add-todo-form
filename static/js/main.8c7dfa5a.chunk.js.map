{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","userId","TodoList","todos","map","getUserById","todoUserId","usersFromServer","find","todosWithUsers","App","useState","setTodos","setTitle","setUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c7dfa5a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../types';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo key={todo.userId} user={todo.user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => (\n          <TodoInfo key={todo.id} todo={todo} />\n        ))\n      }\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/types';\n\nfunction getUserById(todoUserId: number) {\n  return usersFromServer.find(userId => userId.id === todoUserId);\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError('Please enter title');\n\n      return;\n    }\n\n    if (!userId) {\n      setUserError('Please choose a user');\n\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    };\n\n    setTodos([...todos, newTodo]);\n\n    setTitle('');\n    setTitleError('');\n    setUserId(0);\n    setUserError('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError('');\n            }}\n          />\n          {titleError && (\n            <span className=\"error\">{titleError}</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">User: </label>\n\n          <select\n            id=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setUserError('');\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">{userError}</span>\n          )}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}